{"version":3,"sources":["images/db.png","components/home/Home.jsx","images/db2.png","libs/Https.js","services/authService.js","components/views/layout/LayoutNav.jsx","components/views/layout/Layout.jsx","images/db-not.png","components/sessions/Error.jsx","components/sessions/Signin.jsx","PrivateRoute.jsx","PublicRoute.jsx","components/pages/Output.jsx","components/pages/Results.jsx","@utils.js","components/pages/WizardNav.jsx","components/pages/Wizard.jsx","components/editor/Editor.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","src","databaseImage","alt","style","width","API_URL","get","url","a","fetch","req","json","console","log","Error","post","form","method","mode","cache","credentials","headers","body","JSON","stringify","redirect","referrer","postRemote","AuthService","login","username","password","Https","res","isLogin","localStorage","getItem","removeItem","parse","user","getCurrentUser","LayoutNav","handleClick","logout","window","location","reload","logo","id","Object","keys","length","type","onClick","Layout","props","children","signinSchema","yup","shape","required","Signin","handleSubmit","values","authService","status","setItem","history","push","swal","fire","icon","title","confirmButtonColor","text","msg","then","result","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","name","onChange","onBlur","value","disabled","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","Output","height","logs","map","item","ind","date","message","Results","table","Card","elevation","Table","minWidth","columns","data","index","align","classList","classes","entries","filter","entry","join","WizardNav","dots","i","isActive","currentStep","goToStep","totalSteps","cursor","Wizard","marginTop","nav","initialStep","isHashEnabled","hashkey","Editor","useState","setLogs","tables","setTables","setTable","queryParser","query","ast","sqliteParser","sts","statement","variant","split","trim","into","from","target","db","toUpperCase","process","timer","addLog","undefined","origin","getLogs","getTables","useEffect","margin","Accordion","defaultActiveKey","Item","eventKey","Header","Body","rows","placeholder","document","getElementById","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c7a8cebe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/db.c05bec76.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../styles/Home.css\";\nimport databaseImage from \"../../images/db.png\";\n\nconst Home = () => {\n  return (\n    <div className=\"Home\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"Home__col col-12 col-md-4\">\n            <h1>\n              Welcome to the management system SQL\n              <b className=\"font-yellow\">Editor</b>\n            </h1>\n            <Link className=\"btn btn-primary\" to=\"/editor\">\n              Get Started\n            </Link>\n          </div>\n\n          <div className=\"Home__col d-none d-md-block col-md-8\">\n            <img\n              src={databaseImage}\n              alt=\"Superman\"\n              className=\"img-fluid p-4\"\n              style={{ width: \"50%\" }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/db2.92aad1ad.png\";","const API_URL = \"https://apisqleditornodejs.herokuapp.com/api/\";\n\nclass Http {\n  get = async (url) => {\n    try {\n      let req = await fetch(API_URL + url);\n      let json = await req.json();\n\n      return json;\n    } catch (err) {\n      console.log(\"http get method err\", err);\n\n      throw Error(err);\n    }\n  };\n\n  post = async (url, form) => {\n    try {\n      let req = await fetch(API_URL + url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n        body: JSON.stringify(form),\n        redirect: \"follow\",\n        referrer: \"no-referrer\",\n      });\n\n      let json = await req.json();\n\n      return json;\n    } catch (err) {\n      console.log(\"http post method err\", err);\n\n      // throw Error(err);\n    }\n  };\n\n  postRemote = async (url, form) => {\n    try {\n      let req = await fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n        body: JSON.stringify(form),\n        redirect: \"follow\",\n        referrer: \"no-referrer\",\n      });\n\n      let json = await req.json();\n\n      return json;\n    } catch (err) {\n      console.log(\"http post method err\", err);\n\n      throw Error(err);\n    }\n  };\n}\n\nexport default new Http();\n","import Https from \"../libs/Https\";\n\nclass AuthService {\n  login = async (username, password) => {\n    const res = await Https.post(\"login\", { username, password });\n    return res;\n  };\n\n  logout() {\n    localStorage.removeItem(\"auth_user\");\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"auth_user\"));\n  }\n\n  isLogin = () => {\n    if (localStorage.getItem(\"auth_user\")) {\n      return true;\n    }\n\n    return false;\n  };\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Navbar.css\";\nimport logo from \"../../../images/db2.png\";\nimport AuthService from \"../../../services/authService\";\n\nconst user = AuthService.getCurrentUser();\nconst LayoutNav = () => {\n  const handleClick = async () => {\n    AuthService.logout();\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg Navbar\">\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img className=\"Navbar__brand-logo\" src={logo} alt=\"Logo\" />\n            <span className=\"Navbar__font-white\">SQL</span>\n            <span className=\"Navbar__font-yellow\">Editor</span>\n          </Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                {user && (\n                  <>\n                    {Object.keys(user).length > 0 && (\n                      <Link className=\"nav-link\" to=\"/editor\">\n                        <span className=\"Navbar__font_li\">Editor</span>\n                      </Link>\n                    )}\n                  </>\n                )}\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-1\">\n            {user && (\n              <>\n                {Object.keys(user).length > 0 && (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={handleClick}\n                  >\n                    Logout\n                  </button>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default LayoutNav;\n","import React from \"react\";\nimport LayoutNav from \"./LayoutNav\";\n\nconst Layout = (props) => {\n  return (\n    <div>\n      <LayoutNav />\n      {props.children}\n    </div>\n  );\n};\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/db-not.416b0faf.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Error.css\";\nimport databaseImage from \"../../images/db-not.png\";\n\nconst Error = () => {\n  return (\n    <div className=\"Error\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"Error__col col-12 col-md-4\">\n            <h1>404</h1>\n            <p className=\"text-36 subheading mb-3\">that's an error!</p>\n            <p className=\"mb-5  text-muted text-18\">\n              Sorry! The page you were looking for doesn't exist.\n            </p>\n            <Link className=\"btn btn-primary\" to=\"/\">\n              Go back to home\n            </Link>\n          </div>\n          <div className=\"Error__col d-none d-md-block col-md-8\">\n            <img\n              src={databaseImage}\n              alt=\"Superman\"\n              className=\"img-fluid p-4\"\n              style={{ width: \"50%\" }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport swal from \"sweetalert2\";\nimport authService from \"../../services/authService\";\n\nimport \"../styles/Signin.css\";\nimport databaseImage from \"../../images/db.png\";\n\nconst Signin = (props) => {\n  const handleSubmit = async (values) => {\n    const res = await authService.login(values.username, values.password);\n    if (res.status === 1) {\n      localStorage.setItem(\"auth_user\", JSON.stringify(res.user));\n      props.history.push(\"/\");\n      swal\n        .fire({\n          icon: \"success\",\n          title: \"Welcome\",\n          confirmButtonColor: \"#249B83\",\n          text: res.msg,\n        })\n        .then((result) => {\n          window.location.reload();\n        });\n    } else if (res.status === 0) {\n      swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        confirmButtonColor: \"#249B83\",\n        text: res.msg,\n      });\n    }\n  };\n\n  return (\n    <div className=\"Signin\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"Signin__col col-12 col-md-6\">\n            <div className=\"Badge\">\n              <div className=\"Badge__header\">\n                <h3>Login</h3>\n              </div>\n\n              <div className=\"Badge__section-name\">\n                <div className=\"mb-3\">\n                  <Formik\n                    initialValues={{ username: \"\", password: \"\" }}\n                    validationSchema={signinSchema}\n                    onSubmit={handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <label>Username</label>\n                        <input\n                          type=\"text\"\n                          name=\"username\"\n                          className=\"form-control\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.username}\n                        />\n                        <div className=\"text-danger\">\n                          {errors.username &&\n                            touched.username &&\n                            errors.username}\n                        </div>\n                        <label>Password</label>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          className=\"form-control\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.password}\n                        />\n                        <div className=\"text-danger\">\n                          {errors.password &&\n                            touched.password &&\n                            errors.password}\n                        </div>\n                        <br />\n                        <button\n                          type=\"submit\"\n                          disabled={isSubmitting}\n                          className=\"btn btn-primary\"\n                        >\n                          Sign In\n                        </button>\n                      </form>\n                    )}\n                  </Formik>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Signin__col d-none d-md-block col-md-6\">\n            <img\n              src={databaseImage}\n              alt=\"Superman\"\n              className=\"img-fluid p-4\"\n              style={{ width: \"70%\" }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst signinSchema = yup.object().shape({\n  username: yup.string().required(\"es requerido\"),\n  password: yup.string().required(\"es requerido\"),\n});\n\nexport default Signin;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthService from \"./services/authService\";\n\n/**\n * Mostrar el componente solo cuando el usuario esté autenticado\n * de lo contrario, se redirige a login de la aplicación\n * @param {*} childres\n * @returns true or false\n */\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        AuthService.isLogin() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/session/signin\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthService from \"./services/authService\";\n\n/**\n * Mostrar las pantallas publicas de la aplicación\n * @param {*} childrens\n * @returns\n */\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        AuthService.isLogin() && restricted ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { BsCheckLg, BsXLg } from \"react-icons/bs\";\n\nconst Output = (props) => {\n  return (\n    <div className=\"overflow-auto\" style={{ height: \"400px\" }}>\n      {props.logs.length > 0 ? (\n        <ol className=\"list-group list-group-numbered\">\n          {props.logs.map((item, ind) => (\n            <li\n              key={ind}\n              className=\"list-group-item d-flex justify-content-between align-items-start\"\n            >\n              <div className=\"ms-2 me-auto\">\n                <div className=\"fw-bold\">{item.date}</div>\n                {item.message}\n              </div>\n              {item.status === 0 ? (\n                <span className=\"badge bg-success rounded-pill\">\n                  <BsCheckLg></BsCheckLg>\n                </span>\n              ) : (\n                <span className=\"badge bg-danger rounded-pill\">\n                  <BsXLg></BsXLg>\n                </span>\n              )}\n            </li>\n          ))}\n        </ol>\n      ) : (\n        <p className=\"text-muted\">Not outputs</p>\n      )}\n    </div>\n  );\n};\n\nexport default Output;\n","import React from \"react\";\nimport { Table, Card } from \"react-bootstrap\";\n\nconst Results = (props) => {\n  if (!props.table) {\n    return null;\n  }\n  return (\n    <div style={{ height: \"400px\" }}>\n      {Object.keys(props.table).length > 0 ? (\n        <Card\n          elevation={6}\n          className=\"overflow-auto\"\n          style={{ width: \"370px\", height: \"400px\" }}\n        >\n          <Table style={{ minWidth: 100 }}>\n            <thead>\n              <tr>\n                {props.table.columns.map((item, ind) => (\n                  <th className=\"pl-sm-24\" key={ind}>\n                    {item}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {props.table.data.length > 0 ? (\n                <>\n                  {props.table.data.map((item, ind) => (\n                    <tr key={ind}>\n                      {props.table.columns.map((value, index) => (\n                        <td\n                          key={index}\n                          className=\"pl-sm-24 capitalize\"\n                          align=\"left\"\n                        >\n                          {item[index]}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </>\n              ) : (\n                <p className=\"text-muted\">Not results</p>\n              )}\n            </tbody>\n          </Table>\n        </Card>\n      ) : (\n        <p className=\"text-muted\">Not results</p>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","export function classList(classes) {\n  return Object.entries(classes)\n    .filter((entry) => entry[1])\n    .map((entry) => entry[0])\n    .join(\" \");\n}\n","import React from \"react\";\nimport { classList } from \"../../@utils\";\n\nconst WizardNav = (props) => {\n  const dots = [];\n  for (let i = 1; i <= props.totalSteps; i += 1) {\n    const isActive = props.currentStep === i;\n    dots.push(\n      <div\n        key={i}\n        className={classList({\n          \"cursor-pointer\": !isActive,\n          \"p-2 px-3 pt-0\": i !== 1,\n          \"p-2 px-3 pl-0 pt-0\": i === 1,\n          \"step-active\": isActive,\n        })}\n        onClick={() => props.goToStep(i)}\n      >\n        <h5\n          className={classList({\n            \"m-0 mb-1 text-14\": true,\n            \"text-primary\": isActive,\n          })}\n        >\n          {i === 1 && <>Output</>}\n          {i === 2 && <>Results</>}\n        </h5>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"d-flex flex-wrap form-wizard mb-3\"\n      style={{ cursor: \"pointer\" }}\n    >\n      {dots}\n    </div>\n  );\n};\n\nexport default WizardNav;\n","import React from \"react\";\nimport StepWizard from \"react-step-wizard\";\n\nimport Output from \"../pages/Output\";\nimport Results from \"../pages/Results\";\nimport WizardNav from \"../pages/WizardNav\";\n\nconst Wizard = (props) => {\n  return (\n    <div className=\"container\" style={{ marginTop: \"2%\" }}>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <StepWizard nav={<WizardNav />} initialStep={1} isHashEnabled={true}>\n            <Output hashkey={\"first\"} logs={props.logs}></Output>\n            <Results hashkey={\"second\"} table={props.table}></Results>\n          </StepWizard>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Wizard;\n","import React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { HiDatabase } from \"react-icons/hi\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport swal from \"sweetalert2\";\nimport sqliteParser from \"sqlite-parser\";\n\nimport Https from \"../../libs/Https\";\nimport Wizard from \"../pages/Wizard\";\n\nconst Editor = () => {\n  const [logs, setLogs] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [table, setTable] = useState({});\n\n  const queryParser = async (query) => {\n    try {\n      const ast = sqliteParser(query);\n      let sts = ast.statement[0];\n      if (sts.variant === \"create\") {\n        return sts.name.name.split(\".\")[0].trim();\n      } else if (sts.variant === \"insert\") {\n        return sts.into.name.split(\".\")[0].trim();\n      } else if(sts.variant === \"update\") {\n        return sts.into.name.split(\".\")[0].trim();\n      } else if (sts.variant === \"delete\") {\n        return sts.from.name.split(\".\")[0].trim();\n      } else if (sts.variant === \"select\") {\n        if (sts.from.variant === \"join\") {\n          return \"co\";\n        } else {\n          return sts.from.name.split(\".\")[0].trim();\n        }\n      } else if (sts.variant === \"drop\") {\n        return sts.target.name.split(\".\")[0].trim();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const handleSubmit = async (query) => {\n    let db = await queryParser(query.query);\n    db = db.toUpperCase();\n    let url;\n    if (db === \"VM\") {\n      url = process.env.REACT_APP_URL_SERVER_VICTOR;\n    } else if (db === \"WS\") {\n      url = process.env.REACT_APP_URL_SERVER_WALTER;\n    } else if (db === \"MP\") {\n      url = process.env.REACT_APP_URL_SERVER_MIGUEL;\n    } else if (db === \"CO\") {\n      url = process.env.REACT_APP_URL_SERVER_LOCAL;\n    } else {\n      swal.fire({\n        icon: \"error\",\n        title: \"Error!\",\n        confirmButtonColor: \"#249B83\",\n        text: \"Server does not exist\",\n        timer: 2500,\n      });\n      let res = { status: 1, message: `Server does ${db} not exist` };\n      await addLog(res);\n      return;\n    }\n\n    if (url !== undefined) {\n      let body = {query: query.query, origin: \"co\"};\n      const res = await Https.postRemote(url + \"/parseQuery\", body);\n      await addLog(res);\n      setTable(res.table);\n      if (res.status === 1) {\n        swal.fire({\n          icon: \"warning\",\n          title: \"Oops!\",\n          text: res.message,\n          confirmButtonColor: \"#249B83\",\n        });\n      } else if (res.status === 0) {\n        swal.fire({\n          icon: \"success\",\n          title: \"Successfully\",\n          confirmButtonColor: \"#249B83\",\n          text: res.message,\n        });\n      } else {\n        swal.fire({\n          icon: \"error\",\n          title: \"Error!\",\n          confirmButtonColor: \"#249B83\",\n          text: res.message,\n          timer: 2500,\n        });\n      }\n      await getLogs();\n      await getTables();\n    }\n  };\n\n  const getLogs = async () => {\n    const res = await Https.get(\"logs\");\n    setLogs(res);\n  };\n\n  const getTables = async () => {\n    const res = await Https.get(\"databases\");\n    setTables(res);\n  };\n\n  const addLog = async (body) => {\n    await Https.post(\"logs\", body);\n  };\n\n  useEffect(() => {\n    getLogs();\n    getTables();\n    setTable({});\n  }, []);\n\n  return (\n    <div style={{ margin: \"20px\" }}>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <div className=\"card overflow-auto\" style={{ width: \"300px\", height: \"400px\" }}>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Tables</h5>\n              {tables.length > 0 ? (\n                <>\n                  {tables.map((item, ind) => (\n                    <Card key={ind} className=\"mb-3 shadow-sm\">\n                      <Accordion defaultActiveKey=\"0\">\n                        <Accordion.Item eventKey={ind}>\n                          <Accordion.Header>\n                            <p className=\"text-muted\">\n                              <span className=\"badge bg-primary rounded-pill\">\n                                <HiDatabase></HiDatabase>\n                              </span>{\" \"}\n                              {item.name}\n                            </p>\n                          </Accordion.Header>\n                          <Accordion.Body>\n                            {item.columns.map((item, id) => (\n                              <div key={id}>\n                                <div className=\"row\">\n                                  <div className=\"col-10\">\n                                    <p>{item}</p>\n                                  </div>\n                                </div>\n                                <hr></hr>\n                              </div>\n                            ))}\n                          </Accordion.Body>\n                        </Accordion.Item>\n                      </Accordion>\n                    </Card>\n                  ))}\n                </>\n              ) : (\n                <p className=\"text-muted\">Not results</p>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-5\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Editor</h5>\n              <Formik initialValues={{ query: \"\" }} onSubmit={handleSubmit}>\n                {({ handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <textarea\n                      className=\"form-control\"\n                      name=\"query\"\n                      id=\"query\"\n                      rows=\"5\"\n                      placeholder=\"Write your query\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    ></textarea>\n                    <br />\n                    <div className=\"d-flex justify-content-end\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        EXECUTE QUERY\n                      </button>\n                      <button type=\"button\" className=\"btn btn-warning\" onClick={()=>document.getElementById(\"query\").value = \"\"}>\n                        CLEAN CONSOLE\n                      </button>\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <Wizard logs={logs} table={table}></Wizard>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./components/home/Home\";\nimport Layout from \"./components/views/layout/Layout\";\nimport Error from \"./components/sessions/Error\";\nimport Signin from \"./components/sessions/Signin\";\n\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport Editor from \"./components/editor/Editor\";\nimport \"moment/locale/es\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <PublicRoute\n            restricted={true}\n            component={Signin}\n            path=\"/session/signin\"\n            exact\n          />\n          <PrivateRoute component={Home} path=\"/\" exact />\n          <PrivateRoute component={Editor} path=\"/editor\" exact />\n          <Route component={Error}></Route>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}